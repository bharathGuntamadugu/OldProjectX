# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                      controllers.Assets.at(path="/public", file)


GET         /                                  controllers.Application.index
GET         /forms                             controllers.Forms.forms
GET         /getUserInfo                       controllers.Application.getUserInfo
GET         /getActiveUsers                    controllers.Application.getActiveUsers
POST        /inviteNewUser/:email/:role        controllers.Application.inviteNewUser(email, role)
GET         /forms/customerDetails/:custDetails/:dob            controllers.Forms.customerDetailsPost(custDetails,dob)
POST        /fetchPdfForm                      controllers.Application.fetchPdfForm()

#securesocial driven routes
# Login page
GET         /login                             securesocial.controllers.LoginPage.login
GET         /logout                            securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET         /signup/:token                     securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                     securesocial.controllers.Registration.handleSignUp(token)
GET         /reset                             securesocial.controllers.Registration.startResetPassword
POST        /reset                             securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                      securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                      securesocial.controllers.Registration.handleResetPassword(token)
POST        /password/:cp/:np                  controllers.Application.changePassword(cp,np)


# Providers entry points
GET         /authenticate/:provider            securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider            securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /not-authorized                    securesocial.controllers.ProviderController.notAuthorized
